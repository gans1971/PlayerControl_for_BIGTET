<mah:MetroWindow
	x:Class="PlayerControl.View.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
	xmlns:converters="clr-namespace:Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dd="urn:gong-wpf-dragdrop"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:md="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
	xmlns:ri="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:v="clr-namespace:PlayerControl.View"
	xmlns:vm="clr-namespace:PlayerControl.ViewModels"
	Title="PlayerControl"
	Width="460"
	Height="200"
	MinWidth="420"
	MinHeight="200"
	Dialog:DialogParticipation.Register="{Binding}"
	BorderThickness="1"
	GlowBrush="{DynamicResource AccentColorBrush}"
	IsWindowDraggable="True"
	SaveWindowPosition="True"
	ShowMaxRestoreButton="False"
	ShowMinButton="False"
	ShowTitleBar="False"
	TitleCharacterCasing="Normal"
	Topmost="True"
	mc:Ignorable="d">

	<!--#region データコンテキスト-->
	<mah:MetroWindow.DataContext>
		<vm:MainWindowViewModel>
			<vm:MainWindowViewModel.MahAppsDialogCoordinator>
				<Dialog:DialogCoordinator />
			</vm:MainWindowViewModel.MahAppsDialogCoordinator>
		</vm:MainWindowViewModel>
	</mah:MetroWindow.DataContext>
	<!--#endregion-->

	<!--#region Windowのイベントトリガ-->
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding LoadedCommand}" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closing">
			<i:InvokeCommandAction Command="{Binding ClosingCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<!--#endregion-->

	<mah:MetroWindow.Resources>
		<converters:ObjectMatchVisibilityConverter x:Key="ObjectMatchVisibilityConverter" />
	</mah:MetroWindow.Resources>

	<Grid x:Name="LayoutRoot" FocusManager.FocusedElement="{Binding ElementName=PlayersListBox}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<!--#region ツールグリッド TODO:機能実装-->
		<Grid x:Name="ToolGrid" Margin="5">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.Resources>
				<Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniLightButton}" TargetType="{x:Type Button}">
					<Setter Property="Margin" Value="10,5" />
					<Setter Property="Padding" Value="0" />
				</Style>
			</Grid.Resources>

			<!--  プレイヤー追加ボタン  -->
			<Button
				Width="30"
				Height="30"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				Command="{Binding EditPlayersListCommand}"
				ToolTip="プレイヤーリストを編集">
				<md:PackIcon
					Width="25"
					Height="25"
					Kind="AccountPlus" />
			</Button>

			<Button
				Grid.Column="1"
				Width="30"
				Height="30"
				HorizontalContentAlignment="Center"
				VerticalContentAlignment="Center"
				Command="{Binding EditPlayersListCommand}"
				ToolTip="プレイヤーを交換">
				<md:PackIcon
					Width="25"
					Height="25"
					Kind="SwapHorizontal" />
			</Button>
		</Grid>
		<!--#endregion-->

		<!--#region プレイヤーコントロールグループ-->

		<!--  プレイヤー一覧  -->
		<!--  ※覚書： https://mvrck.jp/documents/dotnet/wpf/itemscontrol-template/  -->
		<ListBox
			x:Name="PlayersListBox"
			Grid.Row="1"
			HorizontalContentAlignment="Stretch"
			VerticalContentAlignment="Center"
			dd:DragDrop.IsDragSource="True"
			dd:DragDrop.IsDropTarget="True"
			dd:DragDrop.UseDefaultDragAdorner="True"
			AlternationCount="2"
			BorderThickness="1"
			ItemsSource="{Binding Players}">

			<!--  ItemsPanelテンプレート（垂直スタックパネル）  -->
			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel>
						<i:Interaction.Behaviors>
							<i:FluidMoveBehavior AppliesTo="Children" Duration="0:0:0.2">
								<i:FluidMoveBehavior.EaseY>
									<PowerEase EasingMode="EaseInOut" />
								</i:FluidMoveBehavior.EaseY>
							</i:FluidMoveBehavior>
						</i:Interaction.Behaviors>
					</StackPanel>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>

			<!--  アイテムの背景をトリガーで設定（選択・行ごとなど）：ItemContainerStyle  -->
			<ListBox.ItemContainerStyle>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />

					<!--  コンテキストメニュー  -->
					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu>
								<MenuItem Header="1P へセット">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ri:EventToReactiveCommand Command="{Binding PlacementTarget.Tag.Player1ChangeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
								</MenuItem>
								<MenuItem Header="2P へセット" InputGestureText="→ キー">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ri:EventToReactiveCommand Command="{Binding PlacementTarget.Tag.Player2ChangeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
								</MenuItem>
								<MenuItem Header="スコア入力" InputGestureText="スペースキー">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ri:EventToReactiveCommand Command="{Binding PlacementTarget.Tag.InputScoreCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
								</MenuItem>
							</ContextMenu>
						</Setter.Value>
					</Setter>

					<EventSetter Event="KeyDown" Handler="ListViewItem_KeyDown" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<Border Background="{TemplateBinding Background}">
									<ContentPresenter />
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<Trigger Property="ListBox.AlternationIndex" Value="0">
							<Setter Property="Background" Value="#F9F9F9" />
						</Trigger>
						<Trigger Property="ListBox.AlternationIndex" Value="1">
							<Setter Property="Background" Value="#F4F6F6" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Background}" />
							<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Text}" />
						</MultiTrigger>
					</Style.Triggers>
				</Style>
			</ListBox.ItemContainerStyle>

			<!--  アイテムテンプレート  -->
			<ListBox.ItemTemplate>
				<DataTemplate>
					<Grid
						x:Name="ItemGrid"
						Margin="2"
						Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="160" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<!--  アイテム内コントロールのスタイルリソース  -->
						<Grid.Resources>
							<!--  プレイヤーチェンジボタンスタイル  -->
							<Style BasedOn="{StaticResource MaterialDesignFloatingActionSecondaryLightButton}" TargetType="{x:Type Button}">
								<Setter Property="Margin" Value="5,0" />
								<Setter Property="Padding" Value="0" />
								<Setter Property="Width" Value="30" />
								<Setter Property="Height" Value="30" />
								<Setter Property="FontSize" Value="18" />
								<Setter Property="FontWeight" Value="Bold" />
							</Style>
							<!--  スコア文字スタイル  -->
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="VerticalAlignment" Value="Center" />
								<Setter Property="HorizontalAlignment" Value="Center" />
								<Setter Property="Margin" Value="0,5" />
								<Setter Property="FontSize" Value="20" />
								<Setter Property="FontWeight" Value="Bold" />
							</Style>
						</Grid.Resources>

						<!--  プレイヤー名  -->
						<Grid x:Name="PlayerNameGrid" Width="280">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" MinWidth="45" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>

							<!--  プレイヤーアイコン(1P/2P)  -->
							<Border
								x:Name="CurrentPlayerIcon1"
								Width="30"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Background="OrangeRed"
								CornerRadius="6">
								<TextBlock
									FontSize="15"
									FontWeight="Bold"
									Foreground="White"
									Text="P1" />
								<Border.Visibility>
									<MultiBinding Converter="{StaticResource ObjectMatchVisibilityConverter}">
										<Binding Path="." />
										<Binding Path="DataContext.CurrentPlayer1.Value" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
									</MultiBinding>
								</Border.Visibility>
							</Border>
							<Border
								x:Name="CurrentPlayerIcon2"
								Width="30"
								HorizontalAlignment="Center"
								VerticalAlignment="Center"
								Background="DarkBlue"
								CornerRadius="6">
								<TextBlock
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
									FontSize="15"
									FontWeight="Bold"
									Foreground="White"
									Text="P2" />
								<Border.Visibility>
									<MultiBinding Converter="{StaticResource ObjectMatchVisibilityConverter}">
										<Binding Path="." />
										<Binding Path="DataContext.CurrentPlayer2.Value" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
									</MultiBinding>
								</Border.Visibility>
							</Border>

							<!--  プレイヤー名文字（ViewBox入り）  -->
							<Viewbox
								x:Name="PlayerNameViewBox"
								Grid.Column="1"
								HorizontalAlignment="Left"
								StretchDirection="DownOnly">
								<Label
									x:Name="PlayerNameLabel"
									HorizontalContentAlignment="Left"
									VerticalContentAlignment="Center"
									Content="{Binding Name.Value}"
									FontSize="22"
									FontWeight="Bold"
									Foreground="Black" />
							</Viewbox>
						</Grid>

						<!--  表示スコア  -->
						<Border
							Grid.Column="2"
							Width="200"
							Margin="5,0,0,0">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="MouseDown">
									<ri:EventToReactiveCommand Command="{Binding DataContext.SetTodayBestCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
							<TextBlock Width="60" Text="{Binding TodayBest.Value}" />
						</Border>

						<!--  プレイヤー設定コントロール（非表示）  -->
						<StackPanel
							x:Name="ChangeButtonPanel"
							Grid.Column="3"
							Orientation="Horizontal"
							Visibility="Collapsed">
							<Button x:Name="Player1ChangeButton_" Content="1P">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ri:EventToReactiveCommand Command="{Binding DataContext.Player1ChangeCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>
							<Button x:Name="Player2ChangeButton_" Content="2P">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ri:EventToReactiveCommand Command="{Binding DataContext.Player2ChangeCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>
						</StackPanel>
					</Grid>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>
		<!--#endregion-->

		<!--  各種設定ダイアログ（種類の数だけIdentifierを変えて列挙:Viewはコマンド実行元で設定する）  -->
		<!--  参考：http://nineworks2.blog.fc2.com/blog-entry-117.html  -->
		<materialDesign:DialogHost
			Grid.RowSpan="5"
			d:IsHidden="True"
			CloseOnClickAway="False"
			Identifier="MainWindowDialog" />
	</Grid>
</mah:MetroWindow>
