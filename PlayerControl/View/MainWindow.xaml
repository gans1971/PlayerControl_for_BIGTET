<mah:MetroWindow
	x:Class="PlayerControl.View.MainWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
	xmlns:bh="clr-namespace:Behavior"
	xmlns:converters="clr-namespace:Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dd="urn:gong-wpf-dragdrop"
	xmlns:ei="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:m="clr-namespace:PlayerControl.Model"
	xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:md="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
	xmlns:ri="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:v="clr-namespace:PlayerControl.View"
	xmlns:vm="clr-namespace:PlayerControl.ViewModels"
	x:Name="metroWindow"
	Title="{Binding AppTitle.Value}"
	Width="440"
	Height="220"
	MinWidth="460"
	MinHeight="180"
	Dialog:DialogParticipation.Register="{Binding}"
	BorderThickness="1"
	GlowBrush="{DynamicResource AccentColorBrush}"
	IsWindowDraggable="True"
	Loaded="MainWindow_Loaded"
	SaveWindowPosition="True"
	ShowMaxRestoreButton="False"
	ShowMinButton="False"
	ShowTitleBar="True"
	TitleBarHeight="25"
	TitleCharacterCasing="Normal"
	mc:Ignorable="d">

	<!--#region タイトルバーテンプレート-->
	<mah:MetroWindow.TitleTemplate>
		<DataTemplate>
			<TextBlock
				Margin="5,-1,5,0"
				VerticalAlignment="Center"
				FontFamily="{DynamicResource HeaderFontFamily}"
				FontSize="{DynamicResource WindowTitleFontSize}"
				FontWeight="Light"
				Text="{TemplateBinding Content}"
				TextTrimming="CharacterEllipsis" />
		</DataTemplate>
	</mah:MetroWindow.TitleTemplate>
	<!--#endregion-->

	<!--#region タイトルバー右サイドメニュー-->
	<mah:MetroWindow.RightWindowCommands>
		<mah:WindowCommands>
			<Button x:Name="AboutBox" IsTabStop="False">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<ri:EventToReactiveCommand Command="{Binding AboutBoxCommand}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<md:PackIcon
					Width="18"
					Height="18"
					Kind="InformationOutline" />
			</Button>
		</mah:WindowCommands>
	</mah:MetroWindow.RightWindowCommands>
	<!--#endregion-->

	<!--#region ショートカット-->
	<mah:MetroWindow.InputBindings>
		<KeyBinding Command="{Binding EditPlayersListCommand}" Gesture="Alt+P" />
		<KeyBinding
			Key="P"
			Command="{Binding EditPlayersListCommand}"
			Gesture="Ctrl+P"
			Modifiers="Alt" />
		<KeyBinding Command="{Binding SaveJsonCommand}" Gesture="Ctrl+S" />
	</mah:MetroWindow.InputBindings>
	<!--#endregion-->

	<!--#region データコンテキスト-->
	<mah:MetroWindow.DataContext>
		<vm:MainViewModel>
			<vm:MainViewModel.PlayerControlDialogCoordinator>
				<Dialog:DialogCoordinator />
			</vm:MainViewModel.PlayerControlDialogCoordinator>
		</vm:MainViewModel>
	</mah:MetroWindow.DataContext>
	<!--#endregion-->

	<!--#region MainWindow リソース-->
	<mah:MetroWindow.Resources>
		<!--#region コンバーター-->
		<converters:ObjectMatchVisibilityConverter x:Key="ObjectMatchVisibilityConverter" />
		<converters:StringBoolConverter x:Key="StringBoolConverter" />
		<converters:StringEmptyToZeroConverter x:Key="StringEmptyToZeroConverter" />
		<converters:Int0VisibilityConverter x:Key="Int0VisibilityConverter" />
		<converters:Score_Second_LavelConverter x:Key="Score_Second_LavelConverter" />
		<converters:Score_LavelConverter x:Key="Score_LavelConverter" />
		<converters:EnumMatchToVisibilityConverter x:Key="EnumMatchToVisibilityConverter" />
		<converters:ScoreAmountConverter x:Key="ScoreAmountConverter" />
		<converters:AddLabelConverter x:Key="AddLabelConverter" />
		<converters:EnablePlayerNamesVisibilityConverter x:Key="EnablePlayerNamesVisibilityConverter" />
		<converters:CountBoolConverter x:Key="CountBoolConverter" />

		<!--#endregion-->

		<!--#region Storyboard-->
		<Storyboard x:Key="SaveJsonAnimation">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="SaveJsonFlushRect" Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0.6">
					<EasingDoubleKeyFrame.EasingFunction>
						<PowerEase EasingMode="EaseIn" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
				<EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<PowerEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>

		<Storyboard x:Key="SetClipboardAnimation">
			<DoubleAnimationUsingKeyFrames Storyboard.TargetName="ClipboardAnimationRect" Storyboard.TargetProperty="(UIElement.Opacity)">
				<EasingDoubleKeyFrame KeyTime="00:00:00.1500000" Value="0.6">
					<EasingDoubleKeyFrame.EasingFunction>
						<PowerEase EasingMode="EaseIn" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
				<EasingDoubleKeyFrame KeyTime="00:00:00.5000000" Value="0">
					<EasingDoubleKeyFrame.EasingFunction>
						<PowerEase EasingMode="EaseOut" />
					</EasingDoubleKeyFrame.EasingFunction>
				</EasingDoubleKeyFrame>
			</DoubleAnimationUsingKeyFrames>
		</Storyboard>
		<materialDesign:BrushRoundConverter x:Key="BrushRoundConverter" />
		<!--#endregion-->
	</mah:MetroWindow.Resources>
	<!--#endregion-->

	<!--#region Windowのトリガー-->
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding LoadedCommand}" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closing">
			<i:InvokeCommandAction Command="{Binding ClosingCommand}" />
		</i:EventTrigger>
		<!--  JSON保存時刻の更新アニメーション  -->
		<ei:DataTrigger
			Binding="{Binding OutputJsonTime.Value, Mode=OneWay}"
			Comparison="NotEqual"
			Value="{x:Static sys:DateTime.MinValue}">
			<ei:DataTrigger.Actions>
				<ei:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource SaveJsonAnimation}" />
			</ei:DataTrigger.Actions>
		</ei:DataTrigger>
		<!--  クリップボード追加時のアニメーション  -->
		<ei:DataTrigger
			Binding="{Binding SetClipboardTime.Value, Mode=OneWay}"
			Comparison="NotEqual"
			Value="{x:Static sys:DateTime.MinValue}">
			<ei:DataTrigger.Actions>
				<ei:ControlStoryboardAction ControlStoryboardOption="Play" Storyboard="{StaticResource SetClipboardAnimation}" />
			</ei:DataTrigger.Actions>
		</ei:DataTrigger>
	</i:Interaction.Triggers>
	<!--#endregion-->

	<Grid
		x:Name="LayoutRoot"
		Background="White"
		FocusManager.FocusedElement="{Binding ElementName=PlayersListBox}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" MinHeight="32" />
		</Grid.RowDefinitions>

		<!--#region ステージ設定-->
		<Grid x:Name="StageSettingGrid" Margin="0,5,5,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="Auto" />
			</Grid.ColumnDefinitions>
			<Grid.Resources>
				<Style TargetType="{x:Type Label}">
					<Setter Property="Padding" Value="0" />
					<Setter Property="Margin" Value="5,0,0,0" />
					<Setter Property="VerticalAlignment" Value="Center" />
					<Setter Property="FontSize" Value="11" />
					<Setter Property="Foreground" Value="#606060" />
					<Setter Property="FontFamily" Value="Yu Gothic UI" />
				</Style>
				<Style BasedOn="{StaticResource MahApps.Styles.TextBox.Button}" TargetType="{x:Type TextBox}">
					<Setter Property="HorizontalContentAlignment" Value="Center" />
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Setter Property="FontFamily" Value="Yu Gothic UI" />
					<Setter Property="FontSize" Value="12" />
					<Setter Property="mah:TextBoxHelper.TextButton" Value="True" />
					<Setter Property="mah:TextBoxHelper.WatermarkAlignment" Value="Center" />
					<Setter Property="mah:TextBoxHelper.ButtonFontSize" Value="12" />
				</Style>
			</Grid.Resources>

			<Grid VerticalAlignment="Top">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<Label Content="STAGE：" />
				<TextBox
					x:Name="StageName"
					Grid.Column="1"
					VerticalAlignment="Center"
					mah:TextBoxHelper.ButtonCommand="{Binding ClearStageCommand}"
					mah:TextBoxHelper.Watermark="改行:Alt+Enter　決定:Enter"
					MaxLength="120"
					PreviewKeyDown="StageName_PreviewKeyDown"
					TabIndex="1"
					Text="{Binding Stage.Value, UpdateSourceTrigger=PropertyChanged}"
					TextWrapping="Wrap">
					<TextBox.InputBindings>
						<KeyBinding Command="{Binding SetStageCommand}" Gesture="Enter" />
					</TextBox.InputBindings>
				</TextBox>
			</Grid>
			<StackPanel
				Grid.Column="1"
				VerticalAlignment="Center"
				Orientation="Horizontal">
				<Label Content="スコアラベル：" />
				<TextBox
					x:Name="ScoreLabel"
					Width="75"
					VerticalAlignment="Stretch"
					mah:TextBoxHelper.ButtonCommand="{Binding ClearScoreLabelCommand}"
					mah:TextBoxHelper.Watermark="（なし）"
					TabIndex="2"
					Text="{Binding ScoreLabel.Value, UpdateSourceTrigger=PropertyChanged}"
					TextWrapping="NoWrap">
					<TextBox.InputBindings>
						<KeyBinding Command="{Binding SetStageCommand}" Gesture="Enter" />
					</TextBox.InputBindings>
				</TextBox>
			</StackPanel>
		</Grid>
		<!--#endregion-->

		<!--#region ツールグリッド（Header）-->
		<DockPanel
			x:Name="ToolDockPanel"
			Grid.Row="1"
			Margin="5,5,0,5"
			LastChildFill="False">
			<DockPanel.Resources>
				<Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
					<Setter Property="Margin" Value="0,0,5,0" />
					<Setter Property="Padding" Value="5,0" />
					<Setter Property="HorizontalContentAlignment" Value="Center" />
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Setter Property="Height" Value="Auto" />
					<Setter Property="Height" Value="25" />
					<Setter Property="Cursor" Value="Hand" />
				</Style>
				<Style TargetType="md:PackIcon">
					<Setter Property="Width" Value="16" />
					<Setter Property="Height" Value="16" />
					<Setter Property="VerticalAlignment" Value="Center" />
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="FontSize" Value="12" />
					<Setter Property="Margin" Value="2.5,0" />
					<Setter Property="Foreground" Value="{StaticResource MaterialDesignLightForeground}" />
				</Style>
			</DockPanel.Resources>

			<Button
				x:Name="EditPlayerListButton"
				Command="{Binding EditPlayersListCommand}"
				TabIndex="10">
				<StackPanel Orientation="Horizontal">
					<md:PackIcon Kind="AccountMultiple" />
					<TextBlock>
						<Run Text="プレイヤー追加・削除(" />
						<Underline>
							<Run Text="P" />
						</Underline>
						<Run Text=")" />
					</TextBlock>
				</StackPanel>
			</Button>
			<Button
				x:Name="PlayerSwap_Button"
				Command="{Binding PlayerExchangeCommand}"
				TabIndex="11">
				<StackPanel Orientation="Horizontal">
					<TextBlock Text="1P" />
					<md:PackIcon Kind="SwapHorizontal" />
					<TextBlock Text="2P" />
				</StackPanel>
			</Button>
			<Button
				x:Name="Clear1P_Button"
				Command="{Binding PlayerClearCommand}"
				CommandParameter="Player1"
				TabIndex="12">
				<TextBlock Text="1P クリア" />
			</Button>
			<Button
				x:Name="Clear2P_Button"
				Command="{Binding PlayerClearCommand}"
				CommandParameter="Player2"
				TabIndex="13">
				<TextBlock Text="2P クリア" />
			</Button>

			<Grid x:Name="SaveJsonGrid" DockPanel.Dock="Right">
				<Button
					x:Name="SaveJsonButton"
					Padding="5,0"
					Command="{Binding SaveJsonCommand}"
					TabIndex="15"
					ToolTip="手動保存">
					<md:PackIcon Kind="ContentSaveEditOutline" />
				</Button>
				<Rectangle
					x:Name="SaveJsonFlushRect"
					Margin="0,0,5,0"
					Fill="#FFFFFEA9"
					IsHitTestVisible="False"
					Opacity="0">
					<Rectangle.Effect>
						<DropShadowEffect
							BlurRadius="8"
							ShadowDepth="0"
							Color="#FFFFFF30" />
					</Rectangle.Effect>
					<Rectangle.CacheMode>
						<BitmapCache />
					</Rectangle.CacheMode>
				</Rectangle>
			</Grid>
		</DockPanel>
		<!--#endregion-->

		<!--#region プレイヤーコントロール（ListBox）-->
		<!--  ※ListBox覚書： https://mvrck.jp/documents/dotnet/wpf/itemscontrol-template/  -->
		<ListBox
			x:Name="PlayersListBox"
			Grid.Row="2"
			HorizontalContentAlignment="Stretch"
			VerticalContentAlignment="Center"
			d:ItemsSource="{d:SampleData ItemCount=3}"
			dd:DragDrop.DropScrollingMode="VerticalOnly"
			dd:DragDrop.IsDragSource="True"
			dd:DragDrop.IsDropTarget="True"
			dd:DragDrop.MinimumVerticalDragDistance="5"
			dd:DragDrop.ShowAlwaysDropTargetAdorner="True"
			dd:DragDrop.UseDefaultDragAdorner="False"
			AlternationCount="2"
			BorderBrush="{StaticResource MahApps.Brushes.Accent4}"
			BorderThickness="1"
			IsTabStop="False"
			ItemsSource="{Binding Players}"
			KeyboardNavigation.ControlTabNavigation="None"
			ScrollViewer.CanContentScroll="True"
			SelectedValue="{Binding SelectedPlayer.Value}">
			<i:Interaction.Behaviors>
				<v:ScrollIntoViewForListBox />
			</i:Interaction.Behaviors>

			<!--  ItemsPanelテンプレート（垂直スタックパネル）  -->
			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel>
						<i:Interaction.Behaviors>
							<i:FluidMoveBehavior AppliesTo="Children" Duration="0:0:0.1">
								<i:FluidMoveBehavior.EaseY>
									<PowerEase EasingMode="EaseOut" Power="3" />
								</i:FluidMoveBehavior.EaseY>
							</i:FluidMoveBehavior>
						</i:Interaction.Behaviors>
					</StackPanel>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>

			<!--  アイテムの背景をトリガーで設定（選択・行ごとなど）：ItemContainerStyle  -->
			<ListBox.ItemContainerStyle>
				<Style TargetType="{x:Type ListBoxItem}">
					<EventSetter Event="KeyDown" Handler="ListBoxItem_KeyDown" />
					<Setter Property="IsSelected" Value="{Binding IsSelectedUser, Mode=TwoWay}" />

					<!--  フォーカス時の点線を解除  -->
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />

					<!--  ListBoxItem コンテキストメニュー  -->
					<Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu>
								<ContextMenu.Resources>
									<Style TargetType="{x:Type MenuItem}">
										<Setter Property="Margin" Value="5,5" />
									</Style>
								</ContextMenu.Resources>
								<MenuItem Header="スコア/サブ情報入力">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ri:EventToReactiveCommand Command="{Binding PlacementTarget.Tag.ScoreSettingCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
									<MenuItem.Icon>
										<md:PackIcon Kind="Counter" />
									</MenuItem.Icon>
								</MenuItem>
								<MenuItem Header="名前・スコアコピー">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ri:EventToReactiveCommand Command="{Binding PlacementTarget.Tag.ListItemToClipboardCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
									<MenuItem.Icon>
										<md:PackIcon Kind="ClipboardAccountOutline" />
									</MenuItem.Icon>
								</MenuItem>
								<Separator />
								<MenuItem Header="プレイヤー削除">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ri:EventToReactiveCommand Command="{Binding PlacementTarget.Tag.RemovePlayerCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
									<MenuItem.Icon>
										<md:PackIcon Kind="AccountMinusOutline" />
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</Setter.Value>
					</Setter>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<Border Background="{TemplateBinding Background}">
									<ContentPresenter />
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>

					<!--  ListBoxItemの背景を設定  -->
					<Style.Triggers>
						<Trigger Property="ListBox.AlternationIndex" Value="0">
							<Setter Property="Background" Value="White" />
						</Trigger>
						<Trigger Property="ListBox.AlternationIndex" Value="1">
							<Setter Property="Background" Value="{StaticResource MaterialDesignLightBackground}" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Background}" />
						</Trigger>
						<!-- ※ リストボックスがアクティブかつ、選択された状態で背景色を変更する場合は下記 （リストボックスが非アクティブ時はIsSelectedがTrueのまま、通常色になる）
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Background}" />
						</MultiTrigger>-->
					</Style.Triggers>
				</Style>
			</ListBox.ItemContainerStyle>

			<!--  アイテムテンプレート  -->
			<ListBox.ItemTemplate>
				<DataTemplate>
					<Grid
						x:Name="ItemGrid"
						MinHeight="26"
						Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.Resources>
							<Style
								x:Key="ScoreTextBoxStyle"
								BasedOn="{StaticResource MahApps.Styles.TextBox}"
								TargetType="{x:Type TextBox}">
								<Setter Property="VerticalAlignment" Value="Center" />
								<Setter Property="InputMethod.IsInputMethodEnabled" Value="False" />
								<Setter Property="HorizontalContentAlignment" Value="Right" />
								<Setter Property="HorizontalContentAlignment" Value="Right" />
								<Setter Property="MinWidth" Value="45" />
								<Setter Property="MinHeight" Value="15" />
								<Setter Property="Cursor" Value="IBeam" />
								<Setter Property="FontSize" Value="14" />
								<Setter Property="MaxLength" Value="4" />
								<Setter Property="bh:TextBoxGotFocusBehaviors.SelectAllOnGotFocus" Value="True" />
							</Style>
							<Style TargetType="{x:Type Label}">
								<Setter Property="Foreground" Value="#101010" />
								<Setter Property="FontSize" Value="11" />
								<Setter Property="FontFamily" Value="Arial" />
								<Setter Property="Padding" Value="5,0,2,0" />
								<Setter Property="VerticalContentAlignment" Value="Center" />
								<Setter Property="HorizontalContentAlignment" Value="Right" />
							</Style>
						</Grid.Resources>

						<!--  プレイヤー名Grid  -->
						<Grid x:Name="PlayerNameGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" MinWidth="30" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.Resources>
								<Style x:Key="IconTextStyle" TargetType="{x:Type TextBlock}">
									<Setter Property="VerticalAlignment" Value="Center" />
									<Setter Property="HorizontalAlignment" Value="Center" />
									<Setter Property="Foreground" Value="White" />
									<Setter Property="FontSize" Value="12" />
									<Setter Property="FontWeight" Value="Bold" />
								</Style>
								<Style x:Key="IconBorderStyle" TargetType="{x:Type Border}">
									<Setter Property="VerticalAlignment" Value="Center" />
									<Setter Property="HorizontalAlignment" Value="Center" />
									<Setter Property="CornerRadius" Value="5" />
									<Setter Property="Width" Value="22" />
									<Setter Property="Height" Value="22" />
									<Setter Property="Margin" Value="5,0,0,0" />
								</Style>
							</Grid.Resources>
							<!--  プレイヤーアイコン(1P/2P)  -->
							<Border
								x:Name="EmptyPlayerIcon"
								BorderBrush="{StaticResource MahApps.Brushes.Button.Border}"
								BorderThickness="1"
								Style="{StaticResource IconBorderStyle}" />
							<Border
								x:Name="CurrentPlayerIcon1"
								Background="OrangeRed"
								Style="{StaticResource IconBorderStyle}">
								<TextBlock Style="{StaticResource IconTextStyle}" Text="1P" />
								<Border.Visibility>
									<MultiBinding Converter="{StaticResource ObjectMatchVisibilityConverter}">
										<Binding Path="." />
										<Binding Path="DataContext.CurrentPlayer1.Value" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
									</MultiBinding>
								</Border.Visibility>
							</Border>
							<Border
								x:Name="CurrentPlayerIcon2"
								Background="DarkBlue"
								Style="{StaticResource IconBorderStyle}">
								<TextBlock Style="{StaticResource IconTextStyle}" Text="2P" />
								<Border.Visibility>
									<MultiBinding Converter="{StaticResource ObjectMatchVisibilityConverter}">
										<Binding Path="." />
										<Binding Path="DataContext.CurrentPlayer2.Value" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
									</MultiBinding>
								</Border.Visibility>
							</Border>

							<!--  プレイヤー名文字（ViewBox入り）  -->
							<Viewbox
								x:Name="PlayerNameViewBox"
								Grid.Column="1"
								Margin="5,0,0,0"
								HorizontalAlignment="Left"
								StretchDirection="DownOnly">
								<StackPanel Orientation="Horizontal">
									<!--  プレイヤー名  -->
									<Label
										x:Name="PlayerNameLabel"
										HorizontalContentAlignment="Left"
										VerticalContentAlignment="Center"
										Content="{Binding Name}"
										FontSize="13"
										FontWeight="Bold"
										Foreground="Black" />
									<!--  サブ情報  -->
									<Label
										x:Name="PlayerTwitterLabel"
										Margin="10,0,0,0"
										HorizontalContentAlignment="Left"
										VerticalContentAlignment="Center"
										Content="{Binding Twitter}"
										FontSize="11"
										Foreground="{StaticResource MahApps.Brushes.Accent}" />
								</StackPanel>
							</Viewbox>
						</Grid>

						<!--  表示スコア1  -->
						<StackPanel
							x:Name="Score1Panel"
							Grid.Column="1"
							Orientation="Horizontal">
							<Label
								x:Name="Score1Label"
								MinWidth="35"
								Content="{Binding DataContext.ScoreLabel.Value, Converter={StaticResource Score_LavelConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
								Foreground="{StaticResource MahApps.Brushes.Gray2}" />
							<TextBox
								x:Name="Score1"
								CommandManager.PreviewExecuted="ScoreTextBox_PreviewExecuted"
								GotKeyboardFocus="ScoreTextBox_GotKeyboardFocus"
								IsTabStop="False"
								PreviewTextInput="ScoreTextBox_PreviewTextInput"
								Style="{StaticResource ScoreTextBoxStyle}"
								Text="{Binding Score, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringEmptyToZeroConverter}}" />
						</StackPanel>
						<!--  表示スコア2  -->
						<StackPanel
							x:Name="Score2Panel"
							Grid.Column="2"
							Orientation="Horizontal">
							<Label
								x:Name="AddLabel"
								MinWidth="0"
								Content="+"
								Foreground="{StaticResource MahApps.Brushes.Gray2}" />
							<Label
								x:Name="Score2Label"
								MinWidth="35"
								Content="{Binding DataContext.UI_Score2Label.Value, Converter={StaticResource Score_LavelConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
								Foreground="{StaticResource MahApps.Brushes.Gray2}" />
							<TextBox
								x:Name="Score2"
								CommandManager.PreviewExecuted="ScoreTextBox_PreviewExecuted"
								GotKeyboardFocus="ScoreTextBox_GotKeyboardFocus"
								IsTabStop="False"
								PreviewTextInput="ScoreTextBox_PreviewTextInput"
								Style="{StaticResource ScoreTextBoxStyle}"
								Text="{Binding Score_Second, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringEmptyToZeroConverter}}" />
							<Label
								x:Name="AmountLabel"
								MinWidth="0"
								Content="="
								Foreground="{StaticResource MahApps.Brushes.Gray2}"
								IsTabStop="False" />
							<TextBox
								x:Name="AmountText"
								MinWidth="35"
								VerticalAlignment="Center"
								VerticalContentAlignment="Center"
								BorderThickness="0"
								FontFamily="Arial"
								FontSize="12"
								FontWeight="Bold"
								IsReadOnly="True"
								IsTabStop="False"
								TextAlignment="Right">
								<TextBox.Text>
									<MultiBinding Converter="{StaticResource ScoreAmountConverter}">
										<Binding Path="Score" />
										<Binding Path="Score_Second" />
									</MultiBinding>
								</TextBox.Text>
							</TextBox>
						</StackPanel>

						<!--  1P/2P 設定ボタン  -->
						<StackPanel
							x:Name="ChangeButtonPanel"
							Grid.Column="3"
							MinWidth="60"
							Orientation="Horizontal"
							Visibility="Visible">
							<StackPanel.Resources>
								<Style BasedOn="{StaticResource MaterialDesignRaisedDarkButton}" TargetType="{x:Type Button}">
									<Setter Property="VerticalAlignment" Value="Center" />
									<Setter Property="materialDesign:ButtonAssist.CornerRadius" Value="20" />
									<Setter Property="HorizontalAlignment" Value="Center" />
									<Setter Property="FontSize" Value="11" />
									<Setter Property="Margin" Value="5,2,0,2" />
									<Setter Property="Padding" Value="0" />
									<Setter Property="Width" Value="22" />
									<Setter Property="Height" Value="22" />
									<Setter Property="md:RippleAssist.IsDisabled" Value="False" />
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</StackPanel.Resources>
							<Button x:Name="Player1ChangeButton" Content="1P">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ri:EventToReactiveCommand Command="{Binding DataContext.Player1ChangeCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>
							<Button x:Name="Player2ChangeButton" Content="2P">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ri:EventToReactiveCommand Command="{Binding DataContext.Player2ChangeCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>
						</StackPanel>
					</Grid>
					<DataTemplate.Triggers>
						<!--  ユーザー選択時の色調整など  -->
						<DataTrigger Binding="{Binding IsSelectedUser}" Value="True">
							<Setter TargetName="Score1Label" Property="Foreground" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Text}" />
							<Setter TargetName="Score2Label" Property="Foreground" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Text}" />
							<Setter TargetName="AmountLabel" Property="Foreground" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Text}" />
							<Setter TargetName="AddLabel" Property="Foreground" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Text}" />
							<Setter TargetName="AmountText" Property="Foreground" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Text}" />
							<Setter TargetName="PlayerTwitterLabel" Property="Foreground" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Text}" />
						</DataTrigger>

						<!--  スコアモードによる表示切り替え  -->
						<DataTrigger Binding="{Binding DataContext.CurrentScoreMode.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" Value="{x:Static m:ScoreMode.Single}">
							<Setter TargetName="Score2Panel" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
						<DataTrigger Binding="{Binding DataContext.CurrentScoreMode.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" Value="{x:Static m:ScoreMode.Mixture}">
							<Setter TargetName="Score2Panel" Property="Visibility" Value="Visible" />
							<Setter TargetName="Score1Label" Property="Content" Value="{Binding DataContext.UI_Score1Label.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
							<Setter TargetName="Score2Label" Property="Content" Value="{Binding DataContext.UI_Score2Label.Value, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>
		<!--#endregion-->

		<!--#region 下端に表示するバー（スコアモード、Toolメニューなど）-->
		<DockPanel
			x:Name="StatusBar"
			Grid.Row="3"
			Margin="5,0"
			LastChildFill="False">
			<DockPanel.Resources>
				<Style TargetType="{x:Type Label}">
					<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Gray2}" />
					<Setter Property="Margin" Value="0,0,5,0" />
					<Setter Property="FontSize" Value="11" />
					<Setter Property="FontWeight" Value="Bold" />
				</Style>
				<Style TargetType="md:PackIcon">
					<Setter Property="Width" Value="20" />
					<Setter Property="Height" Value="20" />
					<Setter Property="VerticalAlignment" Value="Center" />
					<Setter Property="Margin" Value="0,0,0,0" />
					<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Gray3}" />
				</Style>
			</DockPanel.Resources>

			<!--  スコアモード設定パネル  -->
			<StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
				<StackPanel.Resources>
					<Style TargetType="{x:Type Label}">
						<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Gray2}" />
						<Setter Property="Margin" Value="0" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="FontSize" Value="12" />
						<Setter Property="FontWeight" Value="Bold" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
					</Style>
					<Style TargetType="{x:Type TextBox}">
						<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Gray2}" />
						<Setter Property="Margin" Value="5,0" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="FontSize" Value="12" />
						<Setter Property="FontWeight" Value="Bold" />
						<Setter Property="VerticalContentAlignment" Value="Center" />
					</Style>
				</StackPanel.Resources>
				<Label Content="スコアモード｜" />
				<!--  スコアモード  -->
				<ComboBox
					x:Name="ScoreModeComboBox"
					MinWidth="80"
					Margin="5,5,10,5"
					Padding="2,1,0,1"
					VerticalAlignment="Center"
					VerticalContentAlignment="Center"
					BorderThickness="0"
					IsReadOnly="True"
					ItemsSource="{Binding Source={converters:EnumBindingSource {x:Type m:ScoreMode}}}"
					SelectedItem="{Binding CurrentScoreMode.Value}"
					Style="{StaticResource MaterialDesignOutlinedComboBox}"
					TabIndex="20" />

				<!--  MixtureMode時のみ表示するスコアラベル設定コントロール  -->
				<StackPanel
					x:Name="MixtureModeScoreLabelPanel"
					Orientation="Horizontal"
					Visibility="{Binding CurrentScoreMode.Value, ConverterParameter=Mixture, Converter={StaticResource EnumMatchToVisibilityConverter}}">
					<Label Content="1" />
					<TextBox
						x:Name="Score1Label"
						Width="40"
						Padding="2,0"
						VerticalAlignment="Center"
						VerticalContentAlignment="Center"
						mah:TextBoxHelper.Watermark="ラベルを入力"
						TabIndex="22"
						Text="{Binding UI_Score1Label.Value, UpdateSourceTrigger=PropertyChanged}"
						TextWrapping="NoWrap" />

					<Label Content="2" />
					<TextBox
						x:Name="Score2Label"
						Width="40"
						Padding="2,0"
						VerticalAlignment="Center"
						VerticalContentAlignment="Center"
						mah:TextBoxHelper.Watermark="ラベルを入力"
						TabIndex="24"
						Text="{Binding UI_Score2Label.Value, UpdateSourceTrigger=PropertyChanged}"
						TextWrapping="NoWrap" />
				</StackPanel>
			</StackPanel>

			<!--  名前・スコアコピーパネル  -->
			<Grid DockPanel.Dock="Right">
				<Grid.Resources>
					<Style TargetType="{x:Type MenuItem}">
						<Setter Property="Margin" Value="5,5" />
						<Setter Property="Padding" Value="5,0" />
					</Style>
				</Grid.Resources>
				<Menu
					VerticalAlignment="Center"
					materialDesign:MenuAssist.TopLevelMenuItemHeight="22"
					TabIndex="25">
					<MenuItem IsEnabled="{Binding Players.Count, Converter={StaticResource CountBoolConverter}}">
						<MenuItem.Header>
							<StackPanel Orientation="Horizontal">
								<md:PackIcon Width="14" Kind="ClipboardTextOutline" />
								<Label
									Margin="2,0"
									Padding="0"
									VerticalContentAlignment="Center"
									Content="コピー" />
							</StackPanel>
						</MenuItem.Header>
						<MenuItem
							Header="{Binding SelectedPlayer.Value.Name, Converter={StaticResource AddLabelConverter}, ConverterParameter=選択中プレイヤー:}"
							Icon="{md:PackIcon Kind=ClipboardListOutline}"
							Visibility="{Binding SelectedPlayer.Value, Converter={StaticResource NullableToVisibilityConverter}}">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<ri:EventToReactiveCommand Command="{Binding SelectedPlayerToClipboardCommand}" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</MenuItem>
						<MenuItem Header="1P &amp; 2P" Icon="{md:PackIcon Kind=ClipboardListOutline}">
							<MenuItem.Visibility>
								<MultiBinding Converter="{StaticResource EnablePlayerNamesVisibilityConverter}">
									<Binding Path="CurrentPlayer1.Value.Name" />
									<Binding Path="CurrentPlayer2.Value.Name" />
								</MultiBinding>
							</MenuItem.Visibility>
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<ri:EventToReactiveCommand Command="{Binding CurrentPlayersToClipboardCommand}" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</MenuItem>
						<MenuItem Header="全プレイヤー" Icon="{md:PackIcon Kind=ClipboardListOutline}">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<ri:EventToReactiveCommand Command="{Binding AllPlayersToClipboardCommand}" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</MenuItem>
					</MenuItem>
					<MenuItem Padding="5,0" IsEnabled="{Binding Players.Count, Converter={StaticResource CountBoolConverter}}">
						<MenuItem.Header>
							<StackPanel Orientation="Horizontal">
								<md:PackIcon Width="14" Kind="Tools" />
								<Label
									Margin="2,0"
									Padding="0"
									VerticalContentAlignment="Center"
									Content="Tools" />
							</StackPanel>
						</MenuItem.Header>
						<MenuItem Header="全スコア リセット" Icon="{md:PackIcon Kind=Numeric0BoxOutline}">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<ri:EventToReactiveCommand Command="{Binding ClearAllPlayersScoreCommand}" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</MenuItem>
						<MenuItem Header="プレイヤー順シャッフル" Icon="{md:PackIcon Kind=ShuffleVariant}">
							<i:Interaction.Triggers>
								<i:EventTrigger EventName="Click">
									<ri:EventToReactiveCommand Command="{Binding ShufflePlayersCommand}" />
								</i:EventTrigger>
							</i:Interaction.Triggers>
						</MenuItem>
					</MenuItem>
				</Menu>
			</Grid>

			<!--  簡単な使い方を表示するパネル：面積が足りなくなってきたので非表示  -->
			<StackPanel
				x:Name="HintPanel"
				DockPanel.Dock="Left"
				Orientation="Horizontal"
				Visibility="Collapsed">
				<md:PackIcon Kind="ArrowUpBox" />
				<md:PackIcon Kind="ArrowDownBox" />
				<Label Content="プレイヤー選択" />
				<md:PackIcon Kind="ArrowLeftBox" />
				<Label Content="1Pセット" />
				<md:PackIcon Kind="ArrowRightBox" />
				<Label Content="2Pセット" />
				<md:PackIcon Kind="KeyboardSpace" />
				<Label Content="スコア/サブ情報入力" />
			</StackPanel>
			<!--  DEBUG用：JSON出力時刻  -->
			<StackPanel
				Margin="5,0,0,0"
				DockPanel.Dock="Right"
				Orientation="Horizontal"
				Visibility="Collapsed">
				<TextBlock VerticalAlignment="Center" Text="{Binding OutputJsonTime.Value, StringFormat={}{0:HH時mm分ss.f秒}}" />
			</StackPanel>
		</DockPanel>
		<!--#endregion-->

		<!--#region クリップボード設定時に表示するアニメーション用矩形-->
		<Rectangle
			x:Name="ClipboardAnimationRect"
			Grid.RowSpan="4"
			Width="Auto"
			Height="Auto"
			d:IsLocked="True"
			Fill="#70FFFFFF"
			IsHitTestVisible="False"
			Opacity="0"
			Stroke="{StaticResource MahApps.Brushes.Accent2}"
			StrokeThickness="3" />
		<!--#endregion-->

		<!--#region ユーザー０名時に表示するヘルプ-->
		<Border
			x:Name="InitHelpGrid"
			Grid.Row="2"
			d:IsHidden="True"
			Background="#F0F0F0F0"
			Visibility="{Binding Players.Count, Converter={StaticResource Int0VisibilityConverter}, ConverterParameter=Invert}">
			<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
				<Label
					HorizontalContentAlignment="Center"
					VerticalContentAlignment="Center"
					Content="👆 プレイヤーを追加してください"
					FontFamily="Yu Gothic UI Semibold"
					FontSize="16" />
			</Grid>
		</Border>
		<!--#endregion-->

		<!--  各種設定ダイアログ（種類の数だけIdentifierを変えて列挙:Viewはコマンド実行元で設定する）  -->
		<!--  参考：http://nineworks2.blog.fc2.com/blog-entry-117.html  -->
		<materialDesign:DialogHost
			Grid.RowSpan="4"
			d:IsHidden="True"
			CloseOnClickAway="False"
			Identifier="MainWindowDialog"
			KeyboardNavigation.ControlTabNavigation="None" />
	</Grid>
</mah:MetroWindow>
