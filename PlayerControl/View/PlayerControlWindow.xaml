<mah:MetroWindow
	x:Class="PlayerControl.View.PlayerControlWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Dialog="clr-namespace:MahApps.Metro.Controls.Dialogs;assembly=MahApps.Metro"
	xmlns:bh="clr-namespace:Behavior"
	xmlns:converters="clr-namespace:Converters"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:dd="urn:gong-wpf-dragdrop"
	xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
	xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
	xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:md="clr-namespace:MaterialDesignThemes.Wpf;assembly=MaterialDesignThemes.Wpf"
	xmlns:ri="clr-namespace:Reactive.Bindings.Interactivity;assembly=ReactiveProperty.WPF"
	xmlns:sys="clr-namespace:System;assembly=mscorlib"
	xmlns:v="clr-namespace:PlayerControl.View"
	xmlns:vm="clr-namespace:PlayerControl.ViewModels"
	Title="{Binding AppTitle.Value}"
	Width="390"
	Height="220"
	MinWidth="390"
	MinHeight="200"
	Dialog:DialogParticipation.Register="{Binding}"
	BorderThickness="1"
	GlowBrush="{DynamicResource AccentColorBrush}"
	IsWindowDraggable="True"
	SaveWindowPosition="True"
	ShowMaxRestoreButton="False"
	ShowMinButton="False"
	ShowTitleBar="True"
	TitleBarHeight="25"
	TitleCharacterCasing="Normal"
	mc:Ignorable="d">
	<mah:MetroWindow.TitleTemplate>
		<DataTemplate>
			<TextBlock
				Margin="5,-1,5,0"
				VerticalAlignment="Center"
				FontFamily="{DynamicResource HeaderFontFamily}"
				FontSize="{DynamicResource WindowTitleFontSize}"
				FontWeight="Light"
				Text="{TemplateBinding Content}"
				TextTrimming="CharacterEllipsis" />
		</DataTemplate>
	</mah:MetroWindow.TitleTemplate>
	<mah:MetroWindow.RightWindowCommands>
		<mah:WindowCommands>
			<Button x:Name="AboutBox">
				<i:Interaction.Triggers>
					<i:EventTrigger EventName="Click">
						<ri:EventToReactiveCommand Command="{Binding AboutBoxCommand}" />
					</i:EventTrigger>
				</i:Interaction.Triggers>
				<md:PackIcon
					Width="22"
					Height="22"
					Kind="InformationOutline" />
			</Button>
		</mah:WindowCommands>
	</mah:MetroWindow.RightWindowCommands>
	<mah:MetroWindow.InputBindings>
		<!--#region ショートカット-->
		<KeyBinding Command="{Binding EditPlayersListCommand}" Gesture="Alt+P" />
		<KeyBinding
			Key="P"
			Command="{Binding EditPlayersListCommand}"
			Gesture="Ctrl+P"
			Modifiers="Alt" />
		<KeyBinding Command="{Binding SaveJsonCommand}" Gesture="Ctrl+S" />
		<!--#endregion-->
	</mah:MetroWindow.InputBindings>

	<!--
		TODO:設定画面で切り替えられるようにする
		Topmost ="True"
	-->

	<!--#region データコンテキスト-->
	<mah:MetroWindow.DataContext>
		<vm:MainViewModel>
			<vm:MainViewModel.PlayerControlDialogCoordinator>
				<Dialog:DialogCoordinator />
			</vm:MainViewModel.PlayerControlDialogCoordinator>
		</vm:MainViewModel>
	</mah:MetroWindow.DataContext>
	<!--#endregion-->

	<!--#region Windowのイベントトリガ-->
	<i:Interaction.Triggers>
		<i:EventTrigger EventName="Loaded">
			<i:InvokeCommandAction Command="{Binding LoadedCommand}" />
		</i:EventTrigger>
		<i:EventTrigger EventName="Closing">
			<i:InvokeCommandAction Command="{Binding ClosingCommand}" />
		</i:EventTrigger>
	</i:Interaction.Triggers>
	<!--#endregion-->

	<mah:MetroWindow.Resources>
		<!--#region コンバーター-->
		<converters:ObjectMatchVisibilityConverter x:Key="ObjectMatchVisibilityConverter" />
		<converters:StringBoolConverter x:Key="StringBoolConverter" />
		<converters:StringEmptyToZeroConverter x:Key="StringEmptyToZeroConverter" />
		<!--#endregion-->
	</mah:MetroWindow.Resources>

	<Grid x:Name="LayoutRoot" FocusManager.FocusedElement="{Binding ElementName=PlayersListBox}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
			<RowDefinition Height="Auto" />
		</Grid.RowDefinitions>

		<!--#region イベント名-->
		<Grid x:Name="EventSettingGrid" Margin="5,5,5,0">
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="Auto" />
				<ColumnDefinition Width="*" />
			</Grid.ColumnDefinitions>
			<Label
				Margin="0,0,0,5"
				VerticalAlignment="Center"
				VerticalContentAlignment="Center"
				Content="Stage:"
				FontSize="14"
				FontWeight="Bold"
				Foreground="{StaticResource MahApps.Brushes.Gray2}"
				IsHitTestVisible="False" />
			<TextBox
				x:Name="StageName"
				Grid.Column="1"
				Margin="5,0,0,5"
				VerticalAlignment="Center"
				VerticalContentAlignment="Center"
				mah:TextBoxHelper.ButtonCommand="{Binding SetStageCommand}"
				mah:TextBoxHelper.TextButton="True"
				Cursor="Arrow"
				FontSize="14"
				FontWeight="Bold"
				MaxLength="32"
				Style="{StaticResource MahApps.Styles.TextBox.Button}"
				Text="{Binding Stage.Value, UpdateSourceTrigger=PropertyChanged}">
				<TextBox.InputBindings>
					<KeyBinding Command="{Binding SetStageCommand}" Gesture="Enter" />
				</TextBox.InputBindings>
				<mah:TextBoxHelper.ButtonContent>
					<md:PackIcon
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Kind="KeyboardReturn" />
				</mah:TextBoxHelper.ButtonContent>

			</TextBox>
		</Grid>
		<!--#endregion-->

		<!--#region ツールグリッド-->
		<DockPanel
			x:Name="ToolDockPanel"
			Grid.Row="1"
			Margin="5,0,0,5"
			LastChildFill="False">
			<DockPanel.Resources>
				<Style BasedOn="{StaticResource MaterialDesignFlatLightBgButton}" TargetType="{x:Type Button}">
					<Setter Property="Margin" Value="0,0,5,0" />
					<Setter Property="Padding" Value="5,0" />
					<Setter Property="HorizontalContentAlignment" Value="Center" />
					<Setter Property="VerticalContentAlignment" Value="Center" />
					<Setter Property="FontSize" Value="12" />
					<Setter Property="Height" Value="25" />
					<Setter Property="Cursor" Value="Hand" />
				</Style>
				<Style TargetType="md:PackIcon">
					<Setter Property="Width" Value="16" />
					<Setter Property="Height" Value="16" />
					<Setter Property="VerticalAlignment" Value="Center" />
				</Style>
				<Style TargetType="TextBlock">
					<Setter Property="FontSize" Value="12" />
					<Setter Property="Margin" Value="5,0" />
					<Setter Property="Foreground" Value="{StaticResource MaterialDesignLightForeground}" />
				</Style>
			</DockPanel.Resources>

			<Button Command="{Binding EditPlayersListCommand}">
				<StackPanel Orientation="Horizontal">
					<md:PackIcon Kind="AccountMultiple" />
					<TextBlock>
						プレイヤーリスト(<Underline>P</Underline>)
					</TextBlock>
				</StackPanel>
			</Button>
			<Button Command="{Binding PlayerExchangeCommand}">
				<StackPanel Orientation="Horizontal">
					<md:PackIcon Kind="SwapHorizontal" />
					<TextBlock Text="入替え" />
				</StackPanel>
			</Button>
			<Button Command="{Binding PlayerClearCommand}" CommandParameter="Player1">
				<TextBlock Text="1P クリア" />
			</Button>
			<Button Command="{Binding PlayerClearCommand}" CommandParameter="Player2">
				<TextBlock Text="2P クリア" />
			</Button>
			<Button
				Command="{Binding SaveJsonCommand}"
				DockPanel.Dock="Right"
				ToolTip="設定を保存（手動）">
				<md:PackIcon Kind="ContentSaveEditOutline" />
			</Button>
		</DockPanel>
		<!--#endregion-->

		<!--#region プレイヤーコントロールグループ-->
		<!--  ※覚書： https://mvrck.jp/documents/dotnet/wpf/itemscontrol-template/  -->
		<ListBox
			x:Name="PlayersListBox"
			Grid.Row="2"
			HorizontalContentAlignment="Stretch"
			VerticalContentAlignment="Center"
			d:ItemsSource="{d:SampleData ItemCount=5}"
			dd:DragDrop.DropScrollingMode="VerticalOnly"
			dd:DragDrop.IsDragSource="True"
			dd:DragDrop.IsDropTarget="True"
			dd:DragDrop.MinimumVerticalDragDistance="5"
			dd:DragDrop.ShowAlwaysDropTargetAdorner="True"
			dd:DragDrop.UseDefaultDragAdorner="False"
			AlternationCount="2"
			BorderBrush="{StaticResource MahApps.Brushes.Accent4}"
			BorderThickness="1"
			ItemsSource="{Binding Players}"
			ScrollViewer.CanContentScroll="True">
			<i:Interaction.Behaviors>
				<v:ScrollIntoViewForListBox />
			</i:Interaction.Behaviors>

			<!--  ItemsPanelテンプレート（垂直スタックパネル）  -->
			<ListBox.ItemsPanel>
				<ItemsPanelTemplate>
					<StackPanel>
						<i:Interaction.Behaviors>
							<i:FluidMoveBehavior AppliesTo="Children" Duration="0:0:0.1">
								<i:FluidMoveBehavior.EaseY>
									<PowerEase EasingMode="EaseOut" Power="3" />
								</i:FluidMoveBehavior.EaseY>
							</i:FluidMoveBehavior>
						</i:Interaction.Behaviors>
					</StackPanel>
				</ItemsPanelTemplate>
			</ListBox.ItemsPanel>

			<!--  アイテムの背景をトリガーで設定（選択・行ごとなど）：ItemContainerStyle  -->
			<ListBox.ItemContainerStyle>
				<Style TargetType="{x:Type ListBoxItem}">
					<EventSetter Event="KeyDown" Handler="ListBoxItem_KeyDown" />

					<!--  フォーカス時の点線を解除  -->
					<Setter Property="FocusVisualStyle" Value="{x:Null}" />

					<!--  コンテキストメニュー  -->
					<Setter Property="Tag" Value="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}" />
					<Setter Property="ContextMenu">
						<Setter.Value>
							<ContextMenu>
								<MenuItem Header="1Pへセット">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ri:EventToReactiveCommand Command="{Binding PlacementTarget.Tag.Player1ChangeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
								</MenuItem>
								<MenuItem Header="2Pへセット">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ri:EventToReactiveCommand Command="{Binding PlacementTarget.Tag.Player2ChangeCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
								</MenuItem>
								<MenuItem Header="名前+スコア ⇨クリップボード">
									<i:Interaction.Triggers>
										<i:EventTrigger EventName="Click">
											<ri:EventToReactiveCommand Command="{Binding PlacementTarget.Tag.ToClipboardCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}" />
										</i:EventTrigger>
									</i:Interaction.Triggers>
									<MenuItem.Icon>
										<md:PackIcon Kind="ClipboardAccountOutline" />
									</MenuItem.Icon>
								</MenuItem>
							</ContextMenu>
						</Setter.Value>
					</Setter>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<Border Background="{TemplateBinding Background}">
									<ContentPresenter />
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>

					<!--  ListBoxItemの背景を設定  -->
					<Style.Triggers>
						<Trigger Property="ListBox.AlternationIndex" Value="0">
							<Setter Property="Background" Value="White" />
						</Trigger>
						<Trigger Property="ListBox.AlternationIndex" Value="1">
							<Setter Property="Background" Value="{StaticResource MaterialDesignLightBackground}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelectionActive" Value="True" />
								<Condition Property="IsSelected" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Background}" />
							<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.DataGrid.Selection.Text}" />
						</MultiTrigger>
					</Style.Triggers>
				</Style>
			</ListBox.ItemContainerStyle>

			<!--  アイテムテンプレート  -->
			<ListBox.ItemTemplate>
				<DataTemplate>
					<Grid x:Name="ItemGrid" Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>

						<!--  プレイヤー名  -->
						<Grid x:Name="PlayerNameGrid">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" MinWidth="30" />
								<ColumnDefinition Width="*" />
							</Grid.ColumnDefinitions>
							<Grid.Resources>
								<Style x:Key="IconTextStyle" TargetType="{x:Type TextBlock}">
									<Setter Property="VerticalAlignment" Value="Center" />
									<Setter Property="HorizontalAlignment" Value="Center" />
									<Setter Property="Foreground" Value="White" />
									<Setter Property="FontSize" Value="12" />
									<Setter Property="FontWeight" Value="Bold" />
								</Style>
								<Style x:Key="IconBorderStyle" TargetType="{x:Type Border}">
									<Setter Property="VerticalAlignment" Value="Center" />
									<Setter Property="HorizontalAlignment" Value="Center" />
									<Setter Property="CornerRadius" Value="5" />
									<Setter Property="Width" Value="22" />
									<Setter Property="Height" Value="22" />
									<Setter Property="Margin" Value="5,0,0,0" />
								</Style>
							</Grid.Resources>

							<!--  プレイヤーアイコン(1P/2P)  -->
							<Border
								x:Name="CurrentPlayerIcon1"
								Background="OrangeRed"
								Style="{StaticResource IconBorderStyle}">
								<TextBlock Style="{StaticResource IconTextStyle}" Text="1P" />
								<Border.Visibility>
									<MultiBinding Converter="{StaticResource ObjectMatchVisibilityConverter}">
										<Binding Path="." />
										<Binding Path="DataContext.CurrentPlayer1.Value" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
									</MultiBinding>
								</Border.Visibility>
							</Border>
							<Border
								x:Name="CurrentPlayerIcon2"
								Background="DarkBlue"
								Style="{StaticResource IconBorderStyle}">
								<TextBlock Style="{StaticResource IconTextStyle}" Text="2P" />
								<Border.Visibility>
									<MultiBinding Converter="{StaticResource ObjectMatchVisibilityConverter}">
										<Binding Path="." />
										<Binding Path="DataContext.CurrentPlayer2.Value" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBox}}" />
									</MultiBinding>
								</Border.Visibility>
							</Border>

							<!--  プレイヤー名文字（ViewBox入り）  -->
							<Viewbox
								x:Name="PlayerNameViewBox"
								Grid.Column="1"
								HorizontalAlignment="Left"
								StretchDirection="DownOnly">
								<Label
									x:Name="PlayerNameLabel"
									HorizontalContentAlignment="Left"
									VerticalContentAlignment="Center"
									Content="{Binding Name.Value}"
									FontSize="13"
									FontWeight="Bold"
									Foreground="Black" />
							</Viewbox>
						</Grid>

						<!--  表示スコア  -->
						<Border Grid.Column="1" Margin="10,0">
							<TextBox
								MinWidth="50"
								MinHeight="15"
								VerticalAlignment="Center"
								HorizontalContentAlignment="Right"
								VerticalContentAlignment="Center"
								bh:TextBoxGotFocusBehaviors.SelectAllOnGotFocus="True"
								CommandManager.PreviewExecuted="ScoreTextBox_PreviewExecuted"
								Cursor="IBeam"
								FontSize="14"
								GotKeyboardFocus="ScoreTextBox_GotKeyboardFocus"
								MaxLength="3"
								PreviewTextInput="ScoreTextBox_PreviewTextInput"
								Style="{StaticResource MahApps.Styles.TextBox}"
								Text="{Binding Score.Value, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource StringEmptyToZeroConverter}}" />
						</Border>

						<!--  1P/2P 設定ボタン  -->
						<StackPanel
							x:Name="ChangeButtonPanel"
							Grid.Column="2"
							MinWidth="70"
							Orientation="Horizontal"
							Visibility="Visible">
							<StackPanel.Resources>
								<Style BasedOn="{StaticResource MaterialDesignFloatingActionMiniSecondaryLightButton}" TargetType="{x:Type Button}">
									<Setter Property="VerticalAlignment" Value="Center" />
									<Setter Property="HorizontalAlignment" Value="Center" />
									<Setter Property="FontSize" Value="11" />
									<Setter Property="Margin" Value="10,2,0,2" />
									<Setter Property="Padding" Value="0" />
									<Setter Property="Width" Value="22" />
									<Setter Property="Height" Value="22" />
									<Setter Property="md:RippleAssist.IsDisabled" Value="False" />
									<Setter Property="Visibility" Value="Collapsed" />
									<Style.Triggers>
										<DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsSelected}" Value="True">
											<Setter Property="Visibility" Value="Visible" />
										</DataTrigger>
									</Style.Triggers>
								</Style>
							</StackPanel.Resources>


							<Button x:Name="Player1ChangeButton" Content="1P">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ri:EventToReactiveCommand Command="{Binding DataContext.Player1ChangeCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>
							<Button x:Name="Player2ChangeButton" Content="2P">
								<i:Interaction.Triggers>
									<i:EventTrigger EventName="Click">
										<ri:EventToReactiveCommand Command="{Binding DataContext.Player2ChangeCommand, RelativeSource={RelativeSource AncestorType=ListBox}}" />
									</i:EventTrigger>
								</i:Interaction.Triggers>
							</Button>
						</StackPanel>
					</Grid>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>
		<!--#endregion-->

		<!--  ヒント表示  -->
		<StackPanel
			x:Name="HintPanel"
			Grid.Row="3"
			Margin="5,0"
			Orientation="Horizontal">
			<StackPanel.Resources>
				<Style TargetType="{x:Type Label}">
					<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Gray2}" />
					<Setter Property="Margin" Value="0,0,5,0" />
					<Setter Property="FontSize" Value="12" />
					<Setter Property="FontWeight" Value="Bold" />
				</Style>
				<Style TargetType="md:PackIcon">
					<Setter Property="Width" Value="22" />
					<Setter Property="Height" Value="22" />
					<Setter Property="VerticalAlignment" Value="Center" />
					<Setter Property="Margin" Value="0,0,0,0" />
					<Setter Property="Foreground" Value="{StaticResource MahApps.Brushes.Gray3}" />
				</Style>

			</StackPanel.Resources>

			<md:PackIcon Kind="ArrowUpBox" />
			<md:PackIcon Kind="ArrowDownBox" />
			<Label Content="プレイヤー選択" />
			<md:PackIcon Kind="ArrowLeftBox" />
			<Label Content="1Pにセット" />
			<md:PackIcon Kind="ArrowRightBox" />
			<Label Content="2Pにセット" />
			<md:PackIcon Kind="KeyboardSpace" />
			<Label Content="スコア入力" />
		</StackPanel>

		<!--  各種設定ダイアログ（種類の数だけIdentifierを変えて列挙:Viewはコマンド実行元で設定する）  -->
		<!--  参考：http://nineworks2.blog.fc2.com/blog-entry-117.html  -->
		<materialDesign:DialogHost
			Grid.RowSpan="4"
			d:IsHidden="True"
			CloseOnClickAway="False"
			Identifier="PlayerControlWindowDialog" />
	</Grid>
</mah:MetroWindow>
